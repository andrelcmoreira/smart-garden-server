name: CI

on:
  push:
    branches:
      - main

env:
  MINIMUM_COVERAGE: 75
  PYLINT_MINIMUM_RATE: 9

jobs:
  check_compose_file:
    name: Check docker-compose syntax
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Check docker-compose file
        run: docker-compose --env-file .env.dbg up --dry-run

  lint:
    name: Lint the code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # TODO: remove this
      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install -r tests/requirements.txt
          pip3 install pylint

      - name: Run pylint
        run: pylint app/* --fail-under ${{ env.PYLINT_MINIMUM_RATE }}

  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # TODO: remove this
      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install -r tests/requirements.txt

      - name: Run tests
        run: nose2 -c tests/nose.cfg

  coverage:
    name: Check test coverage
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - uses: actions/checkout@v2

      # TODO: remove this
      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt
          pip3 install -r tests/requirements.txt

      - name: Run tests
        run: nose2 -c tests/nose.cfg

      - name: Check coverage
        run: coverage report --fail-under ${{ env.MINIMUM_COVERAGE }}
